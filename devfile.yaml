schemaVersion: 2.2.2
metadata:
  name: demo-ai-edge-crazy-train
  description: "Demo AI Edge Crazy Train"  
components:
  - name: tools
    container:
      image: "image-registry.openshift-image-registry.svc:5000/openshift/universal-developer-image:opencv"
      args: ['tail', '-f', '/dev/null']
      memoryLimit: 8G
      memoryRequest: 256Mi
      mountSources: true
      volumeMounts:
        - name: m2
          path: /home/user/.m2
      endpoints:
        - exposure: none
          name: debug
          protocol: tcp
          targetPort: 5005
        - exposure: public
          name: monitoring-svc
          protocol: tcp
          targetPort: 8086
      env:
        - name: QUARKUS_HTTP_HOST
          value: 0.0.0.0
        - name: CHE_DASHBOARD_URL
          value: 'https://devspaces.apps.crazy-train.sandbox1893.opentlc.com/dashboard'
        - name: CHE_PLUGIN_REGISTRY_URL
          value: 'https://devspaces.apps.crazy-train.sandbox1893.opentlc.com/plugin-registry/v3'
        - name: CHE_PLUGIN_REGISTRY_INTERNAL_URL
          value: 'http://plugin-registry.openshift-devspaces.svc:8080/v3'
        - name: OPENVSX_REGISTRY_URL
          value: 'https://open-vsx.org'
        - name: MAVEN_OPTS
          value: -Dmaven.repo.local=/home/user/.m2/repository
        - name: MAVEN_USER_HOME
          value: /home/user/.m2
        - name: HOME
          value: /home/user
        - name: KUBEDOCK_ENABLED
          value: "false"

  - name: m2
    volume:
      size: 3Gi
  - name: kube
    volume: {}
  - name: openshift-cli
    container:
      image: quay.io/openshift/origin-cli:4.11
      command: ["tail", "-f", "/dev/null"]
      memoryLimit: 512Mi
      mountSources: true
      volumeMounts:
        - name: kube
          path: /home/user/.kube
      env:
        - name: PATH
          value: '/tmp/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin' 
  - name: mosquitto
    container:
      image: eclipse-mosquitto:latest
      memoryLimit: 1Gi
      endpoints:
        - name: mosquitto-1883
          targetPort: 1883
        - name: mosquitto-9090
          targetPort: 9090     
  - name: zookeeper
    container:
      image: quay.io/strimzi/kafka:latest-kafka-3.4.0
      memoryLimit: 1Gi
      command: ["sh", "-c", "bin/zookeeper-server-start.sh config/zookeeper.properties"]
      env:
        - name: LOG_DIR
          value: "/tmp/logs"
      endpoints:
        - name: zookeeper-port
          targetPort: 2181  
  - name: kafka
    container:
      image: quay.io/strimzi/kafka:latest-kafka-3.4.0
      memoryLimit: 2Gi
      command: 
        - "sh"
        - "-c"
        - >
          until echo > /dev/tcp/localhost/2181; do
            echo 'Waiting for Zookeeper...'
            sleep 1
          done;
          echo 'Zookeeper is ready.';
          bin/kafka-server-start.sh config/server.properties --override replica.fetch.max.bytes=3000000 --override message.max.bytes=3000000 --override listener.security.protocol.map=$${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP} --override listeners=$${KAFKA_LISTENERS} --override advertised.listeners=$${KAFKA_ADVERTISED_LISTENERS} --override zookeeper.connect=$${KAFKA_ZOOKEEPER_CONNECT}
      env:
        - name: LOG_DIR
          value: "/tmp/logs"
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
          value: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
        - name: KAFKA_LISTENERS
          value: "PLAINTEXT://:29092,PLAINTEXT_HOST://:9092"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: "PLAINTEXT://localhost:29092,PLAINTEXT_HOST://localhost:9092"
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: "localhost:2181"
        - name: KAFKA_GROUP_MAX_SESSION_TIMEOUT_MS
          value: "600000"
        - name: KAFKA_REPLICATION_FACTOR
          value: "1"
      endpoints:
        - name: kafka-port
          targetPort: 9092
commands:
  - id: install-maven
    exec:
      commandLine: |
        mkdir -p ~/maven \
        && curl -fsSL https://archive.apache.org/dist/maven/maven-3/3.8.2/binaries/apache-maven-3.8.2-bin.tar.gz | tar -xzC ~/maven  > /tmp/install-maven.log 2>&1 \
        && echo 'export PATH=/home/user/maven/apache-maven-3.8.2/bin:$PATH' >> ~/.bashrc
      component: tools
      env: []
      workingDir: "/"
  - id: install-python-requirements
    exec:
      commandLine: |
        cd /projects/volcamp2025-app/intelligent-train &&  pip install -r src/requirements.txt 
      component: tools
      env: []
      workingDir: "/"
  - id: install-node-requirements
    exec:
      commandLine: |
       cd /projects/volcamp2025-app/train-controller && npm install 
      component: tools
      env: []
      workingDir: "/"
events:
  postStart:
    - install-maven
    - install-python-requirements
    - install-node-requirements
